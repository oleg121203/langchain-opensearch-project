version: '3.8'

name: langchain-opensearch-project

x-opensearch-common: &opensearch-common
  build:
    context: .
    dockerfile: Dockerfile.opensearch
  image: opensearchproject/opensearch:2
  platform: linux/arm64
  environment: &opensearch-env
    cluster.name: "opensearch-cluster"
    bootstrap.memory_lock: "true"
    OPENSEARCH_JAVA_OPTS: "-Xms512m -Xmx512m"
    JAVA_OPTS: "-Djava.security.egd=file:/dev/urandom -Dcom.sun.jndi.ldap.object.trustURLCodebase=false"
    discovery.type: "single-node"
    plugins.security.disabled: "true"
    plugins.security.ssl.http.enabled: "false"
    plugins.security.ssl.transport.enabled: "false"
    plugins.security.allow_default_init_securityindex: "true"
    discovery.seed_hosts: opensearch-node1,opensearch-node2
    cluster.initial_master_nodes: opensearch-node1,opensearch-node2
    DISABLE_INSTALL_DEMO_CONFIG: "true"
    DISABLE_SECURITY_PLUGIN: "false"
    OPENSEARCH_INITIAL_ADMIN_PASSWORD: "Dima1203@"
  ulimits:
    memlock:
      soft: -1
      hard: -1
    nofile:
      soft: 65535
      hard: 65535
  user: opensearch
  networks:
    - langchain-network
  deploy:
    resources:
      limits:
        memory: 8G
      reservations:
        memory: 6G
  healthcheck:
    test: ["CMD-SHELL", "curl -s http://localhost:9200/_cluster/health || exit 1"]
    interval: 20s
    timeout: 10s
    retries: 5
    start_period: 60s

services:
  opensearch-node1:
    <<: *opensearch-common
    container_name: opensearch-node1
    environment:
      <<: *opensearch-env
      node.name: "opensearch-node1"
    user: "1000:1000"
    volumes:
      - ./config/opensearch-node1.yml:/usr/share/opensearch/config/opensearch.yml:ro
      - opensearch-data1:/usr/share/opensearch/data
    ports:
      - "9200:9200"
      - "9600:9600"

  opensearch-node2:
    <<: *opensearch-common
    container_name: opensearch-node2
    environment:
      <<: *opensearch-env
      node.name: "opensearch-node2"
    user: "1000:1000"
    volumes:
      - ./config/opensearch-node2.yml:/usr/share/opensearch/config/opensearch.yml:ro
      - opensearch-data2:/usr/share/opensearch/data

  opensearch-dashboards:
    image: opensearchproject/opensearch-dashboards:2
    container_name: opensearch-dashboards
    ports:
      - "5601:5601"
    environment:
      - OPENSEARCH_HOSTS=["https://opensearch-node1:9200","https://opensearch-node2:9200"]
      - OPENSEARCH_SSL_VERIFICATIONMODE=none
      - OPENSEARCH_USERNAME=admin
      - OPENSEARCH_PASSWORD=Dima1203@
    networks:
      - langchain-network
    depends_on:
      opensearch-node1:
        condition: service_healthy

  redis:
    image: redis:7-alpine
    container_name: redis
    command: redis-server --save 60 1 --loglevel warning --appendonly yes
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - langchain-network
    deploy:
      resources:
        limits:
          memory: 2G
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

  logstash:
    image: opensearchproject/logstash-oss-with-opensearch-output-plugin:7.16.2
    container_name: logstash
    volumes:
      - ./config/logstash.conf:/usr/share/logstash/pipeline/logstash.conf:ro
      - ./config/logstash.yml:/usr/share/logstash/config/logstash.yml:ro
      - ./csv_data:/usr/share/logstash/data:rw
      - ./logs/logstash:/usr/share/logstash/logs
    environment:
      - "LS_JAVA_OPTS=-Xms512m -Xmx512m"
      - OPENSEARCH_URL=http://opensearch-node1:9200
      - LANG=uk_UA.UTF-8
      - LC_ALL=uk_UA.UTF-8
    user: "1000:1000"
    networks:
      - langchain-network
    deploy:
      resources:
        limits:
          memory: 5G
    depends_on:
      - opensearch-node1
      - redis

  langchain:
    build: .
    container_name: langchain
    ports:
      - "5000:5000"
    environment:
      - LANG=uk_UA.UTF-8
      - LC_ALL=uk_UA.UTF-8
      - OPENSEARCH_HOST=http://opensearch-node1:9200
      - OLLAMA_HOST=http://host.docker.internal:11434
      - REDIS_URL=redis://redis:6379/0
      - LOG_LEVEL=DEBUG
    volumes:
      - ./logs/langchain:/app/logs
    networks:
      - langchain-network
    deploy:
      resources:
        limits:
          memory: 4G
    depends_on:
      - opensearch-node1
      - redis

networks:
  langchain-network:
    driver: bridge

volumes:
  opensearch-data1:
  opensearch-data2:
  redis-data:
