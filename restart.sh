#!/bin/bash

# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –ª–æ–≥—É–≤–∞–Ω–Ω—è
log() {
    echo "[$(date +'%Y-%m-%d %H:%M:%S')] $1"
}

# –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å—É –≤–∏–∫–æ–Ω–∞–Ω–Ω—è
check_status() {
    if [ $? -eq 0 ]; then
        log "‚úÖ $1"
    else
        log "‚ùå $1"
        exit 1
    fi
}

# –ü–µ—Ä–µ–ª—ñ–∫ –≤—Å—ñ—Ö —Å–µ—Ä–≤—ñ—Å—ñ–≤
ALL_SERVICES="opensearch-node1 opensearch-node2 opensearch-dashboards redis logstash langchain"

# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –ø–æ–∫–∞–∑—É –¥–æ–ø–æ–º–æ–≥–∏
show_help() {
    echo "–í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è: $0 [–û–ü–¶–Ü–á] [–ö–û–ú–ê–ù–î–ê]"
    echo
    echo "–ö–æ–º–∞–Ω–¥–∏:"
    echo "  start         –ó–∞–ø—É—Å—Ç–∏—Ç–∏ —Å–µ—Ä–≤—ñ—Å–∏"
    echo "  stop          –ó—É–ø–∏–Ω–∏—Ç–∏ —Å–µ—Ä–≤—ñ—Å–∏"
    echo "  restart       –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–∏ —Å–µ—Ä–≤—ñ—Å–∏"
    echo "  status       –ü–æ–∫–∞–∑–∞—Ç–∏ —Å—Ç–∞—Ç—É—Å —Å–µ—Ä–≤—ñ—Å—ñ–≤"
    echo "  logs         –ü–æ–∫–∞–∑–∞—Ç–∏ –ª–æ–≥–∏"
    echo "  rebuild      –ü–µ—Ä–µ–∑—ñ–±—Ä–∞—Ç–∏ —Å–µ—Ä–≤—ñ—Å–∏"
    echo "  clean        –ü–æ–≤–Ω–µ –æ—á–∏—â–µ–Ω–Ω—è —Ç–∞ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ –≤—Å—ñ—Ö —Å–µ—Ä–≤—ñ—Å—ñ–≤"
    echo
    echo "–û–ø—Ü—ñ—ó:"
    echo "  --all        –ó–∞—Å—Ç–æ—Å—É–≤–∞—Ç–∏ –¥–æ –≤—Å—ñ—Ö —Å–µ—Ä–≤—ñ—Å—ñ–≤"
    echo "  --services   –í–∫–∞–∑–∞—Ç–∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ñ —Å–µ—Ä–≤—ñ—Å–∏ (—á–µ—Ä–µ–∑ –ø—Ä–æ–±—ñ–ª)"
    echo
    echo "–ü—Ä–∏–∫–ª–∞–¥–∏:"
    echo "  $0 start --all"
    echo "  $0 restart --services 'opensearch langchain'"
    echo "  $0 logs --services redis"
    echo "  $0 rebuild --all"
}

# –ü–∞—Ä—Å–∏–Ω–≥ –∞—Ä–≥—É–º–µ–Ω—Ç—ñ–≤
COMMAND=""
REBUILD_ALL=false
SERVICES=""

while [[ $# -gt 0 ]]; do
    case $1 in
        start|stop|restart|status|logs|rebuild|clean)
            COMMAND=$1
            shift
            ;;
        --all)
            SERVICES=$ALL_SERVICES
            shift
            ;;
        --services)
            SERVICES=$2
            shift 2
            ;;
        --help|-h)
            show_help
            exit 0
            ;;
        *)
            log "‚ùå –ù–µ–≤—ñ–¥–æ–º–∏–π –ø–∞—Ä–∞–º–µ—Ç—Ä: $1"
            show_help
            exit 1
            ;;
    esac
done

# –Ø–∫—â–æ —Å–µ—Ä–≤—ñ—Å–∏ –Ω–µ –≤–∫–∞–∑–∞–Ω—ñ, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –≤—Å—ñ
if [ -z "$SERVICES" ]; then
    SERVICES=$ALL_SERVICES
fi

# –î–æ–±–∞–≤–∏–º —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞–º–∏
setup_certificates() {
    log "üîí –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤..."
    if [ ! -f "generate-certs.sh" ]; then
        log "‚ùå –§–∞–π–ª generate-certs.sh –Ω–µ –Ω–∞–π–¥–µ–Ω"
        return 1
    fi
    
    chmod +x generate-certs.sh
    ./generate-certs.sh
    check_status "–ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤"
}

# –î–æ–±–∞–≤–ª—è–µ–º —Ñ—É–Ω–∫—Ü–∏—é –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞
setup_permissions() {
    log "üîê –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞..."
    
    for node in "opensearch-node1" "opensearch-node2"; do
        docker-compose exec -T $node bash -c '
            chmod 700 /usr/share/opensearch/config
            chmod 700 /usr/share/opensearch/config/certs
            chmod 600 /usr/share/opensearch/config/certs/node.pem
            chmod 600 /usr/share/opensearch/config/opensearch.yml
            chown -R 1000:1000 /usr/share/opensearch/config/certs
        ' || log "‚ö†Ô∏è –û—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–∞–≤ –¥–ª—è $node"
    done
    
    check_status "–ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø—É"
}

# –§—É–Ω–∫—Ü–∏—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –ø—Ä–∞–≤ –Ω–∞ —Å–∫—Ä–∏–ø—Ç—ã
setup_scripts_permissions() {
    log "üîß –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞ –Ω–∞ —Å–∫—Ä–∏–ø—Ç—ã..."
    
    # –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —Å–∫—Ä–∏–ø—Ç–æ–≤
    SCRIPTS=(
        "restart.sh"
        "setup.sh"
        "setup-security.sh"
        "generate-certs.sh"
        "init-security.sh"
        "fix-permissions.sh"
        "init-config.sh"
        "scripts/backup.sh"
        "scripts/health_check.sh"
        "scripts/setup.sh"
    )
    
    for script in "${SCRIPTS[@]}"; do
        if [ -f "$script" ]; then  # –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ —Å -—Ñ –Ω–∞ -f
            chmod +x "$script"
            log "‚úÖ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –ø—Ä–∞–≤–∞ –Ω–∞ $script"
        else
            log "‚ö†Ô∏è –°–∫—Ä–∏–ø—Ç $script –Ω–µ –Ω–∞–π–¥–µ–Ω"
        fi
    done
    
    # –û—Å–æ–±–ª–∏–≤—ñ –ø—Ä–∞–≤–∞ –¥–ª—è –∫—Ä–∏—Ç–∏—á–Ω–∏—Ö —Å–∫—Ä–∏–ø—Ç—ñ–≤
    for critical_script in "init-config.sh" "init-security.sh" "generate-certs.sh"; do
        if [ -f "$critical_script" ]; then
            chmod 700 "$critical_script"
            log "üîí –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –æ–±–º–µ–∂–µ–Ω—ñ –ø—Ä–∞–≤–∞ –Ω–∞ $critical_script"
        fi
    done

    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–∞–≤ –¥–ª—è —Ñ–∞–π–ª–æ–≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
    log "üîí –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–∞–≤ –Ω–∞ —Ñ–∞–π–ª—ã –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ OpenSearch..."
    if [ -d "config/opensearch-security" ]; then
        chmod 600 config/opensearch-security/*.yml 2>/dev/null || log "‚ö†Ô∏è –ù–µ—Ç YAML —Ñ–∞–π–ª–æ–≤ –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏"
        log "‚úÖ –ü—Ä–∞–≤–∞ –Ω–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
    else
        log "‚ö†Ô∏è –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"
    fi
    
    check_status "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–∞–≤ –Ω–∞ —Å–∫—Ä–∏–ø—Ç—ã"
}

# –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—É—é —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–∞–≤ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤
setup_certs_permissions() {
    log "üîë –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞ –∫ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞–º..."
    
    if [ -d "config/certs" ]; then  # –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ —Å -–¥ –Ω–∞ -d
        log "–£–¥–∞–ª–µ–Ω–∏–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤..."
        sudo rm -rf config/certs
    fi
    
    mkdir -p config/certs
    chmod 755 config/certs
    check_status "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞ –∫ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞–º"
}

# –î–æ–±–∞–≤–ª—è–µ–º —Ñ—É–Ω–∫—Ü–∏—é –æ—á–∏—Å—Ç–∫–∏ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤ –∏ –∫–ª—é—á–µ–π
clean_certificates() {
    log "üßπ –û—á–∏—â–µ–Ω–Ω—è —Å—Ç–∞—Ä–∏—Ö —Å–µ—Ä—Ç–∏—Ñ—ñ–∫–∞—Ç—ñ–≤ —Ç–∞ –∫–ª—é—á—ñ–≤..."
    local cert_paths=(
        "config/certs"
        "config/node-1-keystore.jks"
        "config/node-1-truststore.jks"
        "config/node-2-keystore.jks"
        "config/node-2-truststore.jks"
        "config/root-ca.pem"
        "config/root-ca-key.pem"
        "config/admin.pem"
        "config/admin-key.pem"
    )

    for path in "${cert_paths[@]}"; do
        if [ -e "$path" ]; then
            log "–í–∏–¥–∞–ª–µ–Ω–Ω—è $path"
            sudo rm -rf "$path"
        fi
    done
    check_status "–û—á–∏—â–µ–Ω–Ω—è —Å–µ—Ä—Ç–∏—Ñ—ñ–∫–∞—Ç—ñ–≤"
}

# –ò—Å–ø—Ä–∞–≤–ª—è–µ–º —Ñ—É–Ω–∫—Ü–∏—é –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–ª–∞—Å—Ç–µ—Ä–∞
check_cluster_health() {
    log "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è –∫–ª–∞—Å—Ç–µ—Ä–∞..."
    for i in {1..60}; do
        local health=$(curl -s -k -u admin:Dima1203@ https://localhost:9200/_cluster/health)
        if [[ $health == *'"status":"green"'* ]] || [[ $health == *'"status":"yellow"'* ]]; then
            log "‚úÖ –ö–ª–∞—Å—Ç–µ—Ä OpenSearch —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–æ—Ä–º–∞–ª—å–Ω–æ"
            return 0
        fi
        log "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –∫–ª–∞—Å—Ç–µ—Ä–∞... ($i/60)"
        sleep 10
    done  # –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ 'end' –Ω–∞ 'done'
    log "‚ùå –ö–ª–∞—Å—Ç–µ—Ä OpenSearch –Ω–µ –≥–æ—Ç–æ–≤"
    return 1
}

# –î–æ–±–∞–≤–ª—è–µ–º —Ñ—É–Ω–∫—Ü–∏—é –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–µ—Ç–∏
check_network() {
    log "üåê –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –º–µ—Ä–µ–∂—ñ..."
    if docker network inspect langchain-network >/dev/null 2>&1; then
        log "–í–∏–¥–∞–ª–µ–Ω–Ω—è —ñ—Å–Ω—É—é—á–æ—ó –º–µ—Ä–µ–∂—ñ..."
        docker network rm langchain-network 2>/dev/null || true
    fi
    check_status "–ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –º–µ—Ä–µ–∂—ñ"
}

# –î–æ–±–∞–≤–ª—è–µ–º —Ñ—É–Ω–∫—Ü–∏—é –ø—Ä–æ–≤–µ—Ä–∫–∏ –ª–æ–≥–æ–≤ OpenSearch
check_opensearch_logs() {
    log "üìã –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–≥–æ–≤ OpenSearch..."
    log "=== –õ–æ–≥–∏ opensearch-node1 ==="
    docker-compose logs opensearch-node1 | tail -n 50
    log "=== –õ–æ–≥–∏ opensearch-node2 ==="
    docker-compose logs opensearch-node2 | tail -n 50
}

# –î–æ–±–∞–≤–ª—è–µ–º —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –∑–∞–ø—É—Å–∫–∞ init-security.sh
run_init_security() {
    log "üîê –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ OpenSearch..."
    if [ -f "init-security.sh" ]; then
        chmod +x init-security.sh
        ./init-security.sh
        check_status "–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏"
    else
        log "‚ö†Ô∏è –§–∞–π–ª init-security.sh –Ω–µ –Ω–∞–π–¥–µ–Ω"
    fi
}

# –î–æ–±–∞–≤–ª—è–µ–º —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –∑–∞–ø—É—Å–∫–∞ fix-permissions.sh
run_fix_permissions() {
    log "üìù –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞..."
    if [ -f "fix-permissions.sh" ]; then
        chmod +x fix-permissions.sh
        ./fix-permissions.sh
        check_status "–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞"
    else
        log "‚ö†Ô∏è –§–∞–π–ª fix-permissions.sh –Ω–µ –Ω–∞–π–¥–µ–Ω"
    fi
}

# –ò—Å–ø—Ä–∞–≤–ª—è–µ–º —Ñ—É–Ω–∫—Ü–∏—é run_health_check
run_health_check() {
    log "üè• –ó–∞–ø—É—Å–∫ –ø–æ–≤–Ω–æ—ó –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –∑–¥–æ—Ä–æ–≤'—è —Å–∏—Å—Ç–µ–º–∏..."
    if [ -f "scripts/health_check.sh" ]; then    # –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–æ -—Ñ –Ω–∞ -f –∏ —Ç–æ –Ω–∞ then
        chmod +x scripts/health_check.sh
        ./scripts/health_check.sh
        check_status "–ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤'—è —Å–∏—Å—Ç–µ–º–∏"
    else
        log "‚ö†Ô∏è –§–∞–π–ª health_check.sh –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ"
    fi
}

case $COMMAND in    # –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ –Ω–∞ in
    start)
        log "–ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤—ñ—Å—ñ–≤: $SERVICES"
        setup_scripts_permissions
        docker-compose up -d $SERVICES
        check_status "–ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤—ñ—Å—ñ–≤"
        setup_permissions
        check_cluster_health
        run_health_check
        ;;
    stop)
        log "–ó—É–ø–∏–Ω–∫–∞ —Å–µ—Ä–≤—ñ—Å—ñ–≤: $SERVICES"
        docker-compose stop $SERVICES
        check_status "–ó—É–ø–∏–Ω–∫–∞ —Å–µ—Ä–≤—ñ—Å—ñ–≤"
        ;;
    restart)
        log "–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ —Å–µ—Ä–≤—ñ—Å—ñ–≤: $SERVICES"
        docker-compose restart $SERVICES
        check_status "–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ —Å–µ—Ä–≤—ñ—Å—ñ–≤"
        ;;
    status)
        log "–°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤—ñ—Å—ñ–≤: $SERVICES"
        docker-compose ps $SERVICES
        ;;
    logs)
        log "–ü–æ–∫–∞–∑ –ª–æ–≥—ñ–≤ –¥–ª—è: $SERVICES"
        docker-compose logs --tail=100 -f $SERVICES
        ;;
    rebuild)
        log "–ü–µ—Ä–µ–∑–±—ñ—Ä–∫–∞ —Å–µ—Ä–≤—ñ—Å—ñ–≤: $SERVICES"
        setup_scripts_permissions
        docker-compose down
        setup_certificates
        run_fix_permissions
        run_init_security
        docker-compose build --no-cache $SERVICES
        docker-compose up -d $SERVICES
        setup_permissions
        check_status "–ü–µ—Ä–µ–∑–±—ñ—Ä–∫–∞ —Å–µ—Ä–≤—ñ—Å—ñ–≤"
        run_health_check
        ;;
    clean)
        log "üßπ –ü–æ–≤–Ω–µ –æ—á–∏—â–µ–Ω–Ω—è —Ç–∞ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ —Å–∏—Å—Ç–µ–º–∏..."
        
        # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—Å–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
        log "–ó—É–ø–∏–Ω–∫–∞ –≤—Å—ñ—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ñ–≤..."
        docker-compose down --remove-orphans
        sleep 5
        
        # –û—á–∏—â–∞–µ–º volumes –∏ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã
        log "–û—á–∏—â–µ–Ω–Ω—è —Ç–æ–º—ñ–≤ —Ç–∞ —Å–µ—Ä—Ç–∏—Ñ—ñ–∫–∞—Ç—ñ–≤..."
        docker volume prune -f
        docker volume rm $(docker volume ls -q | grep 'langchain-opensearch-project') 2>/dev/null || true    # –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–æ –∏–ª–∏ –Ω–∞ ||
        clean_certificates
        
        # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–∫—Ä—É–∂–µ–Ω–∏—è
        setup_scripts_permissions
        
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
        if [ -f "init-config.sh" ]; then    # –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–æ -—Ñ –Ω–∞ -f –∏ —Ç–æ –Ω–∞ then
            log "–ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –ø–æ—á–∞—Ç–∫–æ–≤–æ—ó –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—ó..."
            ./init-config.sh
            check_status "–ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—ó"
        else
            log "‚ö†Ô∏è –§–∞–π–ª init-config.sh –Ω–µ –Ω–∞–π–¥–µ–Ω"
        fi
        
        setup_certs_permissions
        setup_certificates
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
        log "üöÄ –ó–∞–ø—É—Å–∫ —Å–∏—Å—Ç–µ–º–∏..."
        docker-compose up -d
        sleep 30  # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è
        
        # –¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –∏—Å–ø—Ä–∞–≤–ª—è—Ç—å –ø—Ä–∞–≤–∞
        run_fix_permissions
        run_init_security
        
        if ! check_cluster_health; then
            check_opensearch_logs
            log "üîÑ –ü—Ä–æ–±—É–µ–º –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –Ω–æ–¥—ã..."
            docker-compose restart opensearch-node1 opensearch-node2
            sleep 30
            check_cluster_health
        fi
        
        log "üìä –°—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º–∏:"
        docker-compose ps
        run_health_check
        ;;
    *)
        log "‚ùå –ù–µ –≤–∫–∞–∑–∞–Ω–∞ –∫–æ–º–∞–Ω–¥–∞"
        show_help
        exit 1
        ;;
esac

# –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å—É
if [ "$COMMAND" != "logs" ]; then    # –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–æ —Ç–æ –Ω–∞ then
    log "–ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å—É —Å–µ—Ä–≤—ñ—Å—ñ–≤..."
    for service in $SERVICES; do
        if docker-compose ps --format "{{.State}}" $service | grep -q "running\|healthy"; then
            log "‚úÖ $service –ø—Ä–∞—Ü—é—î"
            
            # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –¥–ª—è –Ω–æ–¥ OpenSearch
            if [[ $service == opensearch-node* ]]; then    # –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–æ —Ç–æ –Ω–∞ then
                local node_health=$(curl -s -k -u admin:Dima1203@ https://localhost:9200/_nodes/$service/stats)
                if [[ $node_health == *'"status":"green"'* ]] || [[ $node_health == *'"status":"yellow"'* ]]; then    # –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–æ –∏–ª–∏ –Ω–∞ ||
                    log "  ‚îî‚îÄ –ù–æ–¥–∞ –≤ –∫–ª–∞—Å—Ç–µ—Ä–µ –∞–∫—Ç–∏–≤–Ω–∞"
                else
                    log "  ‚îî‚îÄ ‚ö†Ô∏è –ü—Ä–æ–±–ª–µ–º—ã —Å –Ω–æ–¥–æ–π –≤ –∫–ª–∞—Å—Ç–µ—Ä–µ"
                fi
            fi
        else
            log "‚ùå $service –Ω–µ –∑–∞–ø—É—â–µ–Ω–æ"
        fi
    done
fi
